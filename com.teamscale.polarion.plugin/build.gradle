plugins {
    id 'java' 
}

description = "Teamscale Polarion plugin for Polarion v22 R2"

version = '0.0.4'


sourceSets {
    main.java.srcDirs = ['src']
}

repositories {
    mavenCentral()
}

/*
 Dependencies for local buils only. Optionally, you can change that lib/ folder
 and make the dependencies point to your polarion/plugins folder where are those
 jars are taken. For instance /opt/polarion/polarion/plugins/<jar file>
*/
dependencies {  
	compileOnly files(
		'/opt/polarion/polarion/plugins/com.polarion.core.util_3.22.2/util.jar', 
		'/opt/polarion/polarion/plugins/gson-2.8.9.patched.jar',
		'/opt/polarion/polarion/plugins/com.polarion.platform_3.22.2/platform.jar',
    	'/opt/polarion/polarion/plugins/com.polarion.alm.tracker_3.22.2/tracker.jar',
   		'/opt/polarion/polarion/plugins/com.polarion.platform.persistence_3.22.2/platform-persistence.jar',
   		'/opt/polarion/polarion/plugins/com.polarion.alm.projects_3.22.2/projects.jar',
    	'/opt/polarion/polarion/plugins/com.polarion.platform.repository_3.22.2/platform-repository.jar',
    	'/opt/polarion/polarion/plugins/com.polarion.subterra.base_5.22.2/subterra-base-core.jar',
    	'/opt/polarion/polarion/plugins/com.polarion.subterra.base_5.22.2/subterra-base-data.jar',
    	'/opt/polarion/polarion/plugins/javax.servlet_4.0.0.jar'
	) 
}

jar {
    from('webapp/WEB-INF') {
        into('webapp/WEB-INF')
    }
    from{
        ["plugin.xml"]
    }
    manifest {
        from 'META-INF/MANIFEST.MF'
        attributes 'Bundle-Version': version
    }
    exclude('com/teamscale/polarion/plugin/client')     
    
}

task showMeCache doLast() {
    configurations.compileClasspath.each { println it }
}
